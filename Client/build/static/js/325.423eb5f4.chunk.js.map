{"version":3,"file":"static/js/325.423eb5f4.chunk.js","mappings":"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","sources":["Components/Filter.js","Components/Saved.js","Components/UserDetails.jsx","Components/notification.js","Components/CircleButton.js","JobPost/JobCard.js","JobPost/JobPostScreenSub.js","JobPost/Navigation/JobScreenNav.jsx","JobPost/Navigation/MobileNav.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst Filter = ({ showFilter, onToggleFilter, onFilter }) => {\n    const [location, setLocation] = useState('');\n    const [skills, setSkills] = useState('');\n    const [experience, setExperience] = useState('');\n    const [company, setCompany] = useState('');\n    const [sort, setSort] = useState('');\n    const [workMode, setWorkMode] = useState([]);\n    const [employmentType, setEmploymentType] = useState([]);\n    const [salary, setSalary] = useState('');\n\n    const handleFilter = () => {\n        onFilter(location, skills, company, sort, workMode, experience, employmentType, salary);\n    };\n\n    const handleCancel = () => {\n        setLocation('');\n        setSkills('');\n        setExperience('');\n        setCompany('');\n        setSort('');\n        setWorkMode([]);\n        setEmploymentType([]);\n        onToggleFilter();\n    };\n\n    return showFilter ? (\n        <div className=\"filter-container\">\n            <div className=\"filter-row\">\n                <div>\n                    <label className=\"filter-label\">Location:</label>\n                    <input type=\"text\" className=\"filter-input\" value={location} onChange={(e) => setLocation(e.target.value)} />\n                </div>\n                <div>\n                    <label className=\"filter-label\">Skills:</label>\n                    <input type=\"text\" className=\"filter-input\" value={skills} onChange={(e) => setSkills(e.target.value)} />\n                </div>\n            </div>\n\n            <div className=\"filter-row\">\n                <div>\n                    <label className=\"filter-label\">Company:</label>\n                    <input type=\"text\" className=\"filter-input\" value={company} onChange={(e) => setCompany(e.target.value)} />\n                </div>\n                <div>\n                    <label className=\"filter-label\">Experience:</label>\n                    <select className=\"filter-select\" value={experience} onChange={(e) => setExperience(e.target.value)}>\n                        <option value=\"\">Select Experience</option>\n                        <option value=\"Freshers\">Freshers</option>\n                        <option value=\"1-2 years\">1-2 years</option>\n                        <option value=\"3-5 years\">3-5 years</option>\n                        <option value=\"6-9 years\">6-9 years</option>\n                        <option value=\"10-15 years\">10-15 years</option>\n                        <option value=\"15+ years\">15+ years</option>\n                    </select>\n                </div>\n            </div>\n\n            <div className=\"filter-row\">\n                <div>\n                    <label className=\"filter-label\">Sort:</label>\n                    <select className=\"filter-select\" value={sort} onChange={(e) => setSort(e.target.value)}>\n                        <option value=\"\">Sort</option>\n                        <option value=\"7\">Last 7 days</option>\n                        <option value=\"15\">Last 15 days</option>\n                        <option value=\"30\">Last 30 days</option>\n                    </select>\n                </div>\n                <div>\n                    <label className=\"filter-label\">Salary:</label>\n                    <select className=\"filter-select\" value={salary} onChange={(e) => setSalary(e.target.value)}>\n                        <option value=\"\">Select salary</option>\n                        <option value=\"1-3 Lakhs\">1-3 Lakhs</option>\n                        <option value=\"3-5 Lakhs\">3-5 Lakhs</option>\n                        <option value=\"5-8 Lakhs\">5-8 Lakhs</option>\n                        <option value=\"8-13 Lakhs\">8-13 Lakhs</option>\n                        <option value=\"13-20 Lakhs\">13-20 Lakhs</option>\n                        <option value=\"20-40 Lakhs\">20-40 Lakhs</option>\n                        <option value=\"40-60 Lakhs\">40-60 Lakhs</option>\n                        <option value=\"60+ Lakhs\">60+ Lakhs</option>\n                    </select>\n                </div>\n            </div>\n\n            <button className=\"filter-button\" onClick={handleFilter}>Apply</button>\n            <button className=\"filter-cancel-button\" onClick={handleCancel}>Cancel</button>\n        </div>\n    ) : null;\n};\n\nexport default Filter;","import React, { useState, useEffect, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport JobCard from \"../JobPost/JobCard\";\nimport JobScreenNav from \"../JobPost/Navigation/JobScreenNav\";\nimport MobileNav from \"../JobPost/Navigation/MobileNav\";\nimport Notification from \"../Components/notification\";\nimport Filter from \"../Components/Filter\";\nimport API_URLS from \"../config\";\nimport JobPostScreenSub from \"../JobPost/JobPostScreenSub\";\nimport UserDetails from \"../Components/UserDetails\";\n\nconst ENV = process.env.REACT_APP_ENV || \"production\";\nconst API_URL_SAVED = API_URLS[ENV] + \"/savedJobs\";\nconst API_URL_SIGNOUT = API_URLS[ENV] + \"/signOut\";\nconst API_URL_SESSION = API_URLS[ENV] + \"/signIn/sessioncheck\";\n\nfunction Saved() {\n  const [savedJobs, setSavedJobs] = useState([]);\n  const [selectedJob, setSelectedJob] = useState(null);\n  const [showUserDetails, setShowUserDetails] = useState(false);\n  const [showFilter, setShowFilter] = useState(false);\n  const [showNotification, setShowNotification] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 768);\n  const [loading, setLoading] = useState(true);\n\n  const savedJobsContainerRef = useRef(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchSavedJobs = async () => {\n      setLoading(true);\n      try {\n        const response = await axios.get(API_URL_SAVED);\n        setSavedJobs(response.data);\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching saved jobs:\", error);\n        setLoading(false);\n      }\n    };\n\n    fetchSavedJobs();\n  }, []);\n\n  useEffect(() => {\n    axios.defaults.withCredentials = true;\n\n    const fetchSessionData = async () => {\n      setLoading(true);\n      try {\n        const res = await axios.get(API_URL_SESSION);\n        const valid = res.data.valid;\n        const userEmail = res.data.email;\n\n        if (valid) {\n          setEmail(userEmail);\n          console.log(\"email\", userEmail);\n        }\n        setLoading(false);\n      } catch (err) {\n        console.log(err);\n        setLoading(false);\n      }\n    };\n\n    fetchSessionData();\n  }, [navigate]);\n\n  useEffect(() => {\n    const handleResize = () => {\n      const isMobileView = window.innerWidth < 768;\n      setIsMobile(isMobileView);\n    };\n\n    handleResize();\n    window.addEventListener(\"resize\", handleResize);\n\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n\n  const handleJobCardClick = (job) => {\n    setSelectedJob(job);\n    navigate(`/saved?jobid=${job.jobID}`);\n  };\n\n  const toggleUserDetails = () => {\n    setShowUserDetails(!showUserDetails);\n    setShowFilter(false);\n    setShowNotification(false);\n  };\n\n  const toggleFilterDetails = () => {\n    setShowFilter(!showFilter);\n    setShowUserDetails(false);\n    setShowNotification(false);\n  };\n\n  const handleLogout = async () => {\n    try {\n      await axios.get(API_URL_SIGNOUT);\n      navigate(\"/SignIn\");\n    } catch (error) {\n      console.error(\"Error logging out:\", error);\n    }\n  };\n\n  const toggleNotification = () => {\n    setShowNotification(!showNotification);\n    setShowUserDetails(false);\n    setShowFilter(false);\n  };\n\n  const handleSettings = () => {\n    navigate(\"/Setting\");\n  };\n\n  const handleProfile = () => {\n    navigate(\"/Profile\");\n  };\n\n  const handleOnSaved = () => {\n    navigate(\"/Saved\");\n  };\n\n  const handleShareJob = (jobID) => {\n    const shareLink = `${window.location.origin}/viewjobs/${jobID}`;\n    navigator.clipboard\n      .writeText(shareLink)\n      .then(() => alert(\"Job link copied to clipboard!\"))\n      .catch((err) => console.error(\"Error copying job link:\", err));\n  };\n\n  return (\n    <>\n      <JobScreenNav\n        toggleFilterDetails={toggleFilterDetails}\n        toggleUserDetails={toggleUserDetails}\n        toggleNotification={toggleNotification}\n      />\n\n      {showNotification && (\n        <Notification\n          showNotification={showNotification}\n          ontoggleNotification={toggleNotification}\n        />\n      )}\n\n      {showUserDetails && (\n        <UserDetails\n          showUserDetails={showUserDetails}\n          onToggleUserDetails={toggleUserDetails}\n          onLogout={handleLogout}\n          onSettings={handleSettings}\n          onProfile={handleProfile}\n          onSaved={handleOnSaved}\n        />\n      )}\n\n      {showFilter && (\n        <Filter\n          showFilter={showFilter}\n          onToggleFilter={toggleFilterDetails}\n        />\n      )}\n\n      <MobileNav\n        toggleFilterDetails={toggleFilterDetails}\n        toggleUserDetails={toggleUserDetails}\n      />\n\n      <div className=\"savedJobsContainer\" ref={savedJobsContainerRef}>\n        <div className=\"jobcontainer\">\n          {savedJobs.map((job) => (\n            <div key={job.jobID} onClick={() => handleJobCardClick(job)}>\n              <JobCard job={job} />\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {selectedJob && (\n        <div className=\"Selectedjob\">\n          <JobPostScreenSub\n            job={selectedJob}\n            onClose={() => {\n              setSelectedJob(null);\n              navigate(\"/Saved\");\n            }}\n            onShare={handleShareJob}\n          />\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default Saved;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport API_URLS from \"../config\";\n\nconst ENV = process.env.REACT_APP_ENV || \"production\";\nconst API_URL = API_URLS[ENV] + \"/signIn/sessioncheck\";\n\nconst UserDetails = ({\n    showUserDetails,\n    onToggleUserDetails,\n    onLogout,\n    onSettings,\n    onProfile,\n    onSaved,\n    onJobPost,\n}) => {\n    const [email, setEmail] = useState(\"\");\n    const [userType, setUserType] = useState(null);\n    const [isValid, setIsValid] = useState(false);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        axios.defaults.withCredentials = true;\n\n        axios\n            .get(API_URL)\n            .then((res) => {\n                console.log(res);\n                if (res.data.valid) {\n                    setEmail(res.data.email);\n                    setUserType(res.data.userType);\n                    setIsValid(true);\n                } else {\n                    setIsValid(false);\n                }\n            })\n            .catch((err) => console.log(err));\n    }, [navigate]);\n\n    return showUserDetails ? (\n        <div className=\"userDetailsContainer\">\n            <ul>\n                <li>Hi, {email}</li>\n                <li>\n                    <button className=\"user-link profile-link\" onClick={onProfile}>Profile</button>\n                </li>\n                <li>\n                    <button className=\"user-link logout-link\" onClick={onLogout}>Sign Out</button>\n                </li>\n                <li>\n                    <button className=\"user-link saved-link\" onClick={onSaved}>Saved</button>\n                </li>\n                <li>\n                    <button className=\"user-link settings-link\" onClick={onSettings}>Settings</button>\n                </li>\n                {userType === \"A\" && (\n                    <li>\n                        <button className=\"user-link jobpost-link\" onClick={onJobPost}>Job Post</button>\n                    </li>\n                )}\n            </ul>\n        </div>\n    ) : null;\n\n};\n\nexport default UserDetails;","import React from \"react\";\n\nfunction Notification(showNotification  , ontoggleNOtificaton){\n\n\n    return showNotification ? (\n        <div className=\"NotificationContainer\">\n\n            <p>No Notification..!</p>\n\n        </div>\n\n    ) : null;\n\n\n}\n\nexport default Notification;","import React from 'react';\n\nconst CircleButton = ({ color }) => {\n  const buttonStyle = {\n    width: '30px',\n    height: '30px',\n    backgroundColor: color, // Use the color prop for the button background color\n    borderRadius: '50%', // Make it a circle\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    color: 'white', // Text color\n    fontSize: '24px',\n    border: 'none', // Remove button border\n    cursor: 'pointer',\n    outline: 'none', // Remove focus outline\n  };\n\n  const handleClick = () => {\n    // Add your click event logic here\n    // For example, you can toggle a state or perform some action\n  };\n\n  return (\n    <div>\n      <style>\n        {`\n          .circle-button::before {\n            content: \"\\\\2713\"; /* Unicode checkmark symbol */\n            font-weight: bold;\n            transform: scale(1.5); /* Adjust the size of the checkmark */\n          }\n        `}\n      </style>\n      <button className=\"circle-button\" style={buttonStyle} onClick={handleClick}></button>\n    </div>\n  );\n};\n\nexport default CircleButton;\n","import React from 'react';\nimport CircleButton from '../Components/CircleButton';\nimport CompanyLogo from \"../Asset/office.png\";\n\nfunction JobCard({ job, skillMatches, isActive, onClick }) {\n  const { role, companyName, salary, experience, workMode, employmentType, skills, description, jobID, location, Posted_Date } = job;\n\n  // Function to calculate the posted time and return style based on time\n  const getFormattedPostedTime = (postedDate) => {\n    const now = new Date();\n    const posted = new Date(postedDate);\n    const diffTime = Math.abs(now - posted);\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    const diffHours = Math.ceil(diffTime / (1000 * 60 * 60));\n\n    let timeString;\n    let className = '';\n\n    if (diffHours < 24) {\n      timeString = `${diffHours} hours ago`;\n    } else if (diffDays < 7) {\n      timeString = `${diffDays} days ago`;\n    } else if (diffDays < 30) {\n      const weeks = Math.floor(diffDays / 7);\n      timeString = `${weeks} week${weeks > 1 ? 's' : ''} ago`;\n    } else {\n      const weeks = Math.floor(diffDays / 7);\n      timeString = `${weeks} week${weeks > 1 ? 's' : ''} ago`;\n    }\n\n    // Set class name based on the difference in days\n    if (diffDays < 15) {\n      className = 'recentPosted';\n    }\n\n    return { timeString, className };\n  };\n\n  const truncateDescription = (text, limit) => {\n    if (text.length <= limit) {\n      return text;\n    }\n    return text.slice(0, limit) + '...';\n  };\n\n  const buttonColor = skillMatches ? 'green' : '#3498db';\n  const { timeString, className } = getFormattedPostedTime(Posted_Date);\n\n  return (\n    <div className={`jobCard ${isActive ? 'activeJobCard' : ''}`} onClick={onClick}>\n      <div className=\"InnerCard\">\n        <img src={CompanyLogo} alt=\"Company Logo\" className=\"CompanyLogo\" />\n        <h2>{role}</h2>\n        <h3>{companyName}</h3>\n        <h6>Location : {location} </h6>\n        <p><strong>Salary: </strong>{salary}</p>\n        <p><strong>Experience: </strong>{experience}</p>\n        <p><strong>Skills: </strong>{skills}</p>\n        <p className=\"description\">Description: {truncateDescription(description, 100)}</p>\n      </div>\n      <div className=\"jobFooter\">\n        <div className=\"prefer_Section\">\n          <CircleButton color={buttonColor} />\n        </div>\n        <p className={`postedTime ${className}`}>{timeString}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default JobCard;\n","import React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport API_URLS from \"../config\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst ENV = process.env.REACT_APP_ENV || \"production\";\nconst API_URL_SAVE = API_URLS[ENV] + \"/addJobPost/saveJob\";\n\nfunction JobPostScreenSub({ job, onClose, onShare }) {\n  const navigate = useNavigate();\n\n  \n  useEffect(() => {\n    const handleBackNavigation = (event) => {\n      event.preventDefault();\n      navigate(-1); \n    };\n\n    window.history.pushState(null, null, window.location.pathname); \n    window.addEventListener(\"popstate\", handleBackNavigation);\n\n    return () => {\n      window.removeEventListener(\"popstate\", handleBackNavigation);\n    };\n  }, [navigate]);\n\n  if (!job) {\n    return <div>Select a job to view details.</div>;\n  }\n\n  const userId = 1;\n  const handleSaveJob = async () => {\n    try {\n      const response = await axios.post(API_URL_SAVE, {\n        userId,\n        jobId: job.jobID.toString(),\n      });\n      console.log(job.jobID.toString());\n      console.log(\"Job saved successfully:\", response.data);\n    } catch (error) {\n      console.error(\"Error saving job:\", error);\n    }\n  };\n\n  const {\n    jobID,\n    role,\n    companyName,\n    salary,\n    experience,\n    workMode,\n    employmentType,\n    skills,\n    description,\n    expireon,\n    externalLink,\n    jobLink,\n    Posted_Date,\n  } = job;\n\n  const handleApplyJob = () => {\n    let link = jobLink;\n    if (externalLink && jobLink) {\n      if (!jobLink.startsWith(\"http://\") && !jobLink.startsWith(\"https://\")) {\n        link = \"http://\" + jobLink;\n      }\n      window.open(link, \"_blank\");\n    } else {\n      console.log(\"Applying for the job...\");\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"header-section\">\n        <h2>Role criteria</h2>\n        <button onClick={onClose} className=\"crossbutton\">x</button>\n      </div>\n      <p>Role: {role}</p>\n      <p>Company: {companyName}</p>\n      <p>Salary: {salary}</p>\n      <p>Experience: {experience}</p>\n      <p>Skills: {skills}</p>\n      <div className=\"btn-ssa\">\n        <button onClick={handleApplyJob} className=\"btn-apply\">Apply Job</button>\n        <button onClick={() => onShare(jobID)} className=\"btn-share\">Share Job</button>\n        <button onClick={handleSaveJob} className=\"btn-save\">Save</button>\n      </div>\n      <div className=\"Jobdescription\">\n        <h3>Description</h3>\n        <p> Work Mode : {workMode}</p>\n        <p> Employment Type: {employmentType}</p>\n        <p>{description}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default JobPostScreenSub;\n","import React, { useState } from \"react\";\nimport userImage from \"../../Asset/user.png\";\nimport Logo from \"../../Asset/Logo.png\";\nimport searchicon from \"../../Asset/search_icon.png\";\nimport Filtericon from \"../../Asset/filtericon.png\";\nimport NotificationIcon from \"../../Asset/notificationicon.png\";\nimport { Link } from \"react-router-dom\";\nimport Logotext from \"../../Asset/LOgoGdest.png\";\n\nconst JobScreenNav = ({\n  onSearch,\n  toggleFilterDetails,\n  toggleUserDetails,\n  toggleNotification,\n  showSearch,\n  setShowSearch,\n}) => {\n  const [searchValue, setSearchValue] = useState(\"\");\n\n  const handleSearchInput = (e) => {\n    const inputValue = e.target.value;\n    setSearchValue(inputValue);\n  };\n\n  const handleSearch = () => {\n    onSearch(searchValue);\n  };\n\n  const toggleUserPanel = () => {\n    toggleUserDetails();\n  };\n\n  const toggleFilterPanel = () => {\n    toggleFilterDetails();\n  };\n\n  const toggleNotificationPanel = () => {\n    toggleNotification();\n  };\n\n  return (\n    <div className=\"jobScreenNavContainer\">\n      <div className=\"brandLogo\">\n        <Link to=\"/\">\n          <img src={Logo} alt=\"Code Garbages\" className=\"img_Logo\" />\n        </Link>\n      </div>\n      <div className=\"search-container\">\n        {!showSearch && ( \n          <img src={Logotext} alt=\"GDEST.in\" className=\"logotexts\" />\n        )}\n        {showSearch && ( \n          <>\n            <input\n              type=\"text\"\n              className=\"search-input\"\n              placeholder=\"Search...\"\n              value={searchValue}\n              onChange={handleSearchInput}\n            />\n            <button className=\"Searchbutton\" onClick={handleSearch}>\n              <img src={searchicon} alt=\"Search Icon\" className=\"iconStyle\" />\n            </button>\n          </>\n        )}\n        <button className=\"Filterbutton\" onClick={toggleFilterPanel}>\n          <img src={Filtericon} alt=\"Filtericon\" className=\"iconStyle\" />\n        </button>\n        <button\n          className=\"Notificationbutton\"\n          onClick={toggleNotificationPanel}\n        >\n          <img\n            src={NotificationIcon}\n            alt=\"Notificationicon\"\n            className=\"iconStyle\"\n          />\n        </button>\n      </div>\n      <img\n        src={userImage}\n        alt=\"User\"\n        className=\"userIcon\"\n        onClick={toggleUserPanel}\n      />\n    </div>\n  );\n};\n\nexport default JobScreenNav;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport HomeIcon from \"../../Asset/homeicon.png\";\nimport SearchIcon from \"../../Asset/search_icon.png\";\nimport FilterIcon from \"../../Asset/filtericon.png\";\nimport UserIcon from \"../../Asset/user.png\";\nimport LearningIcon from \"../../Asset/learningicon.png\";\n\nconst MobileNav = ({\n  toggleFilterDetails,\n  setShowSearch,\n  toggleUserDetails,\n}) => {\n  const handleFilterClick = () => {\n    toggleFilterDetails();\n  };\n\n  const handleSearchClick = () => {\n    setShowSearch((prev) => !prev);\n  };\n\n  const toggleUserPanel = () => {\n    toggleUserDetails();\n  };\n\n  return (\n    <div>\n      <div className=\"mobileNavContainer\">\n        <Link to=\"/\">\n          <img src={HomeIcon} alt=\"Home Icon\" className=\"navIcon\" />\n        </Link>\n        <img\n          src={SearchIcon}\n          alt=\"Search Icon\"\n          className=\"navIcon\"\n          onClick={handleSearchClick}\n        />\n        <img\n          src={FilterIcon}\n          alt=\"Filter Icon\"\n          className=\"navIcon\"\n          onClick={handleFilterClick}\n        />\n        <Link className=\"Linkk\" to=\"/LearningDefault\">\n          <img src={LearningIcon} alt=\"Learning Icon\" className=\"navIcon\" />\n        </Link>\n        <img\n          src={UserIcon}\n          alt=\"User Icon\"\n          className=\"navIcon\"\n          onClick={toggleUserPanel}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default MobileNav;\n"],"names":["_ref","showFilter","onToggleFilter","onFilter","location","setLocation","useState","skills","setSkills","experience","setExperience","company","setCompany","sort","setSort","workMode","setWorkMode","employmentType","setEmploymentType","salary","setSalary","_jsxs","className","children","_jsx","type","value","onChange","e","target","onClick","handleFilter","handleCancel","ENV","process","REACT_APP_ENV","API_URL_SAVED","API_URLS","API_URL_SIGNOUT","API_URL_SESSION","savedJobs","setSavedJobs","selectedJob","setSelectedJob","showUserDetails","setShowUserDetails","setShowFilter","showNotification","setShowNotification","email","setEmail","isMobile","setIsMobile","window","innerWidth","loading","setLoading","savedJobsContainerRef","useRef","navigate","useNavigate","useEffect","async","response","axios","get","data","error","console","fetchSavedJobs","defaults","withCredentials","res","valid","userEmail","log","err","fetchSessionData","handleResize","isMobileView","addEventListener","removeEventListener","toggleUserDetails","toggleFilterDetails","toggleNotification","_Fragment","JobScreenNav","Notification","ontoggleNotification","UserDetails","onToggleUserDetails","onLogout","onSettings","handleSettings","onProfile","handleProfile","onSaved","handleOnSaved","Filter","MobileNav","ref","map","job","concat","jobID","handleJobCardClick","JobCard","JobPostScreenSub","onClose","onShare","shareLink","origin","navigator","clipboard","writeText","then","alert","catch","API_URL","onJobPost","userType","setUserType","isValid","setIsValid","ontoggleNOtificaton","color","buttonStyle","width","height","backgroundColor","borderRadius","display","justifyContent","alignItems","fontSize","border","cursor","outline","style","handleClick","skillMatches","isActive","role","companyName","description","Posted_Date","buttonColor","timeString","postedDate","now","Date","posted","diffTime","Math","abs","diffDays","ceil","diffHours","weeks","floor","getFormattedPostedTime","src","CompanyLogo","alt","text","limit","length","slice","CircleButton","truncateDescription","API_URL_SAVE","handleBackNavigation","event","preventDefault","history","pushState","pathname","expireon","externalLink","jobLink","handleApplyJob","link","startsWith","open","post","userId","jobId","toString","onSearch","showSearch","setShowSearch","searchValue","setSearchValue","Link","to","Logo","Logotext","placeholder","inputValue","handleSearch","searchicon","toggleFilterPanel","Filtericon","toggleNotificationPanel","userImage","toggleUserPanel","SearchIcon","handleSearchClick","prev","FilterIcon","handleFilterClick","UserIcon"],"sourceRoot":""}