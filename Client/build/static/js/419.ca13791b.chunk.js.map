{"version":3,"file":"static/js/419.ca13791b.chunk.js","mappings":"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","sources":["Learning/InterviewQA/Basic_interview_codings.js","Learning/buttonGroup.js"],"sourcesContent":["import React from 'react';\nimport ButtonGroup from \"../buttonGroup\";\n\nfunction Basic_interview_codings() {\n    // Java code for Fibonacci Series and Palindrome check\n    const javaLangFibonacciCode = [\n        \"public class Fibonacci {\",\n        \"    public static void main(String[] args) {\",\n        \"        int n = 5;\",\n        \"        int a = 0, b = 1;\",\n        \"        System.out.print(a + \\\", \\\" + b);\",\n        \"        for (int i = 2; i < n; i++) {\",\n        \"            int next = a + b;\",\n        \"            System.out.print(\\\", \\\" + next);\",\n        \"            a = b;\",\n        \"            b = next;\",\n        \"        }\",\n        \"    }\",\n        \"}\"\n    ];\n\n    const javaLangPalindromeCode = [\n        \"public class Palindrome {\",\n        \"    public static boolean isPalindrome(String str) {\",\n        \"        int n = str.length();\",\n        \"        for (int i = 0; i < n / 2; i++) {\",\n        \"            if (str.charAt(i) != str.charAt(n - i - 1)) {\",\n        \"                return false;\",\n        \"            }\",\n        \"        }\",\n        \"        return true;\",\n        \"    }\",\n        \"    public static void main(String[] args) {\",\n        \"        String str = \\\"racecar\\\";\",\n        \"        System.out.println(isPalindrome(str));\",\n        \"    }\",\n        \"}\"\n    ];\n\n    // C code for Fibonacci Series and Palindrome check\n    const cLangFibonacciCode = [\n        \"#include <stdio.h>\",\n        \"int main() {\",\n        \"    int n = 5, a = 0, b = 1, next;\",\n        \"    printf(\\\"%d, %d\\\", a, b);\",\n        \"    for (int i = 2; i < n; i++) {\",\n        \"        next = a + b;\",\n        \"        printf(\\\", %d\\\", next);\",\n        \"        a = b;\",\n        \"        b = next;\",\n        \"    }\",\n        \"    return 0;\",\n        \"}\"\n    ];\n\n    const cLangPalindromeCode = [\n        \"#include <stdio.h>\",\n        \"#include <string.h>\",\n        \"int isPalindrome(char str[]) {\",\n        \"    int n = strlen(str);\",\n        \"    for (int i = 0; i < n / 2; i++) {\",\n        \"        if (str[i] != str[n - i - 1]) {\",\n        \"            return 0;\",\n        \"        }\",\n        \"    }\",\n        \"    return 1;\",\n        \"}\",\n        \"int main() {\",\n        \"    char str[] = \\\"racecar\\\";\",\n        \"    if (isPalindrome(str))\",\n        \"        printf(\\\"True\\\\n\\\");\",\n        \"    else\",\n        \"        printf(\\\"False\\\\n\\\");\",\n        \"    return 0;\",\n        \"}\"\n    ];\n\n    return (\n        <div className='BasicInterviewCodings'>\n            <h3>Basic Interview Codings</h3>\n            <p>Implementations of basic interview questions in C and Java, choose between Fibonacci Series or Palindrome check.</p>\n            \n            <div className='algorithm-step'>\n                <h3>Fibonacci Series</h3>\n                <p>Write a program to print the first n numbers in the Fibonacci series.</p>\n                <ButtonGroup\n                    handleLanguageChange={(language) => (`${language}`)}\n                    cLangElements={cLangFibonacciCode}\n                    javaLangElements={javaLangFibonacciCode}\n                />\n            </div>\n\n            <div className='algorithm-step'>\n                <h3>Palindrome Check</h3>\n                <p>Write a function to check if a given string is a palindrome.</p>\n                <ButtonGroup\n                    handleLanguageChange={(language) => (`${language}`)}\n                    cLangElements={cLangPalindromeCode}\n                    javaLangElements={javaLangPalindromeCode}\n                />\n            </div>\n\n            \n        </div>\n    );\n}\n\nexport default Basic_interview_codings;\n","\nimport React, { useState, useEffect } from \"react\";\nimport Prism from \"prismjs\";\nimport \"prismjs/themes/prism.css\";\nimport \"prismjs/components/prism-c\"; // Import the 'c' component for C language support\nimport \"./buttongroup.css\";\n\nfunction ButtonGroup({ handleLanguageChange, cLangElements, javaLangElements }) {\n  const [language, setLanguage] = useState(\"c\");\n  const [copyStatus, setCopyStatus] = useState(\"\");\n\n  const copyToClipboard = () => {\n    const codeToCopy =\n      (language === \"c\" ? cLangElements : javaLangElements).join(\"\\n\");\n    navigator.clipboard\n      .writeText(codeToCopy)\n      .then(() => {\n        setCopyStatus(\"Copied..!\");\n        setTimeout(() => {\n          setCopyStatus(\"\");\n        }, 1000);\n      })\n      .catch(() => setCopyStatus(\"Copy Failed\"));\n  };\n\n  useEffect(() => {\n    Prism.highlightAll(); \n  }, [cLangElements, javaLangElements]);\n\n  const renderSyntax = (selectedLangElements) => {\n    return (\n      <div className=\"code-section\">\n        <div className=\"copy-button-container\">\n          <button\n            className={`copy-button ${copyStatus && \"copied\"}`}\n            onClick={copyToClipboard}\n          >\n            {copyStatus || \"Copy Code\"}\n          </button>\n        </div>\n        <pre className={`language-c`}>\n          <code className={`language-c`}>\n            {selectedLangElements.join(\"\\n\")}\n          </code>\n        </pre>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"button-group\">\n        <button\n          className={`btnC ${language === \"c\" ? \"active\" : \"\"}`}\n          onClick={() => {\n            setLanguage(\"c\");\n            handleLanguageChange(\"c\");\n          }}\n        >\n          C\n        </button>\n        <button\n          className={`btnJava ${language === \"java\" ? \"active\" : \"\"}`}\n          onClick={() => {\n            setLanguage(\"java\");\n            handleLanguageChange(\"java\");\n          }}\n        >\n          Java\n        </button>\n      </div>\n      <div className=\"code-section-container\">\n        {renderSyntax(language === \"c\" ? cLangElements : javaLangElements )\n}\n      </div>\n    </div>\n  );\n}\n\nexport default ButtonGroup; \n"],"names":["_jsxs","className","children","_jsx","ButtonGroup","handleLanguageChange","language","concat","cLangElements","javaLangElements","_ref","setLanguage","useState","copyStatus","setCopyStatus","copyToClipboard","codeToCopy","join","navigator","clipboard","writeText","then","setTimeout","catch","useEffect","Prism","onClick","selectedLangElements"],"sourceRoot":""}