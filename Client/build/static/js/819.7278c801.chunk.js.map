{"version":3,"file":"static/js/819.7278c801.chunk.js","mappings":"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","sources":["Auth/SignUp.js"],"sourcesContent":["import { useRef, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport NavBar from \"../LandingPage/NavBar\";\nimport API_URLS from \"../config\";\nimport './Style_Sign.css'; \n\nconst EMAIL_REGEX = /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$/;\nconst PWD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/;\n\nconst ENV = process.env.REACT_APP_ENV || \"production\";\nconst API_URL = API_URLS[ENV] + \"/users/save_usersData\";\nconst API_URL_UserValidate = API_URLS[ENV] + \"/users/list_userdetail\";\n\nconst Register = () => {\n  const userRef = useRef();\n  const [EmailID, setEmailID] = useState(\"\");\n  const [EmailIDFocus, setEmailIDFocus] = useState(false);\n  const [Pwd, setPwd] = useState(\"\");\n  const [ValidPwd, setValidPwd] = useState(false);\n  const [PwdFocus, setPwdFocus] = useState(false);\n  const [MatchPwd, setMatchPwd] = useState(\"\");\n  const [ValidMatch, setValidMatch] = useState(false);\n  const [MatchFocus, setMatchFocus] = useState(false);\n  const [ErrMsg, setErrMsg] = useState(\"\");\n  const [Success, setSuccess] = useState(false);\n  const [ExistingEmails, setExistingEmails] = useState([]);\n\n  const [hasUpper, setHasUpper] = useState(false);\nconst [hasLower, setHasLower] = useState(false);\nconst [hasNumber, setHasNumber] = useState(false);\nconst [hasSpecial, setHasSpecial] = useState(false);\nconst [hasMinLength, setHasMinLength] = useState(false);\n\nuseEffect(() => {\n  setHasUpper(/[A-Z]/.test(Pwd));\n  setHasLower(/[a-z]/.test(Pwd));\n  setHasNumber(/[0-9]/.test(Pwd));\n  setHasSpecial(/[!@#$%]/.test(Pwd));\n  setHasMinLength(Pwd.length >= 8 && Pwd.length <= 24);\n}, [Pwd]);\n\n\n  useEffect(() => {\n    axios\n      .get(API_URL_UserValidate)\n      .then((response) => {\n        setExistingEmails(response.data.map((user) => user.email));\n      })\n      .catch((error) => {\n        console.error(\"Error fetching existing emails:\", error);\n      });\n  }, []);\n\n  useEffect(() => {\n    const typingTexts = [\"Your Journey Begins Here\"];\n    let textIndex = 0;\n    let charIndex = 0;\n  \n    const typeEffect = () => {\n      const element = document.querySelector(\".typewriter-text\");\n      if (element) {\n        element.textContent = typingTexts[textIndex].slice(0, charIndex);\n        charIndex++;\n        if (charIndex > typingTexts[textIndex].length) {\n          charIndex = 0;\n          textIndex = (textIndex + 1) % typingTexts.length;\n        }\n        setTimeout(typeEffect, 1200); \n      }\n    };\n  \n    typeEffect();\n  }, []);\n  \n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (Pwd !== MatchPwd) {\n      setErrMsg(\"Passwords do not match\");\n      return;\n    }\n\n    if (ExistingEmails.includes(EmailID)) {\n      setErrMsg(\"Email already exists\");\n      return;\n    }\n\n    // Save users\n    try {\n      const response = await axios.post(API_URL, { email: EmailID, pwd: Pwd });\n      setSuccess(true);\n    } catch (error) {\n      console.error(\"Error:\", error);\n      setErrMsg(\"Error occurred while saving data\");\n    }\n  };\n\n  return (\n    <>\n      <NavBar />\n      {Success ? (\n        <div className=\"success-message\">\n          <h1>Success!</h1>\n          <p>\n            <a href=\"#\">Sign In</a>\n          </p>\n        </div>\n      ) : (\n        <div className=\"Register_container\">\n          <div className=\"left-side\">\n            <div className=\"typewriter-text-wrapper\">\n              <h2 className=\"typewriter-text\"></h2>\n            </div>\n            {/* <p className=\"sub-text\">Join us today and experience seamless integration!</p> */}\n          </div>\n          <div className=\"register-card\">\n            <p className={ErrMsg ? \"errmsg\" : \"offscreen\"} aria-live=\"assertive\">\n              {ErrMsg}\n            </p>\n            <h1 className=\"Header_signup\">Sign Up</h1>\n            <form onSubmit={handleSubmit}>\n              <label htmlFor=\"EmailID\" className=\"register_label\">Email:</label>\n              <input\n                type=\"text\"\n                id=\"txtemailID\"\n                ref={userRef}\n                autoComplete=\"off\"\n                onChange={(e) => setEmailID(e.target.value)}\n                value={EmailID}\n                required\n                aria-invalid={ValidPwd ? \"false\" : \"true\"}\n                onFocus={() => setEmailIDFocus(true)}\n                onBlur={() => setEmailIDFocus(false)}\n                className=\"register-input\"\n              />\n              <label htmlFor=\"password\">Password:</label>\n              <input\n                type=\"password\"\n                id=\"password\"\n                onChange={(e) => setPwd(e.target.value)}\n                value={Pwd}\n                required\n                aria-invalid={ValidPwd ? \"false\" : \"true\"}\n                onFocus={() => setPwdFocus(true)}\n                onBlur={() => setPwdFocus(false)}\n                className=\"register-input\"\n              />\n              <p className={PwdFocus ? \"instructions\" : \"offscreen\"}>\n  <span className={hasMinLength ? \"valid-condition\" : \"invalid-condition\"}>\n    8 - 24 characters, \n  </span>\n  <span className={hasUpper ? \"valid-condition\" : \"invalid-condition\"}>\n    Must include uppercase,\n  </span>\n  <span className={hasLower ? \"valid-condition\" : \"invalid-condition\"}>\n    Must include lowercase,\n  </span>\n  <span className={hasNumber ? \"valid-condition\" : \"invalid-condition\"}>\n    Must include a number,\n  </span>\n  <span className={hasSpecial ? \"valid-condition\" : \"invalid-condition\"}>\n    Must include a special character (!@#$%)\n  </span>\n</p>\n\n\n              <label htmlFor=\"confirm_pwd\" className=\"register_label\">Confirm Password:</label>\n              <input\n                type=\"password\"\n                id=\"confirm_pwd\"\n                onChange={(e) => setMatchPwd(e.target.value)}\n                value={MatchPwd}\n                required\n                aria-invalid={ValidMatch ? \"false\" : \"true\"}\n                onFocus={() => setMatchFocus(true)}\n                onBlur={() => setMatchFocus(false)}\n                className=\"register-input\"\n              />\n              <p className={MatchFocus && !ValidMatch ? \"instructions\" : \"offscreen\"}>\n                Must match the password\n              </p>\n\n              <button>Sign Up</button>\n            </form>\n            <p className=\"instructions\">\n              Already registered?\n              <br />\n              <span className=\"line\">\n                <a href=\"SignIn\">Sign In</a>\n              </span>\n            </p>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Register;\n"],"names":["ENV","process","REACT_APP_ENV","API_URL","API_URLS","API_URL_UserValidate","Register","userRef","useRef","EmailID","setEmailID","useState","EmailIDFocus","setEmailIDFocus","Pwd","setPwd","ValidPwd","setValidPwd","PwdFocus","setPwdFocus","MatchPwd","setMatchPwd","ValidMatch","setValidMatch","MatchFocus","setMatchFocus","ErrMsg","setErrMsg","Success","setSuccess","ExistingEmails","setExistingEmails","hasUpper","setHasUpper","hasLower","setHasLower","hasNumber","setHasNumber","hasSpecial","setHasSpecial","hasMinLength","setHasMinLength","useEffect","test","length","axios","get","then","response","data","map","user","email","catch","error","console","typingTexts","textIndex","charIndex","typeEffect","element","document","querySelector","textContent","slice","setTimeout","_jsxs","_Fragment","children","_jsx","NavBar","className","href","onSubmit","async","e","preventDefault","includes","post","pwd","htmlFor","type","id","ref","autoComplete","onChange","target","value","required","onFocus","onBlur"],"sourceRoot":""}