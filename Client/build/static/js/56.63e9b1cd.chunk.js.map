{"version":3,"file":"static/js/56.63e9b1cd.chunk.js","mappings":"+KAKA,MAAMA,EAAMC,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,eAAiB,aACnCC,EAAeC,EAAAA,EAASJ,GAAO,sBA4FrC,QA1FA,SAAyBK,GAA6B,IAA5B,IAAEC,EAAG,QAAEC,EAAO,QAAEC,GAASH,EACjD,MAAMI,GAAWC,EAAAA,EAAAA,MAiBjB,IAdAC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAwBC,IAC5BA,EAAMC,iBACNL,GAAU,EAAE,EAMd,OAHAM,OAAOC,QAAQC,UAAU,KAAM,KAAMF,OAAOG,SAASC,UACrDJ,OAAOK,iBAAiB,WAAYR,GAE7B,KACLG,OAAOM,oBAAoB,WAAYT,EAAqB,CAC7D,GACA,CAACH,KAECH,EACH,OAAOgB,EAAAA,EAAAA,KAAA,OAAAC,SAAK,kCAGd,MAcM,MACJC,EAAK,KACLC,EAAI,YACJC,EAAW,OACXC,EAAM,WACNC,EAAU,SACVC,EAAQ,eACRC,EAAc,OACdC,EAAM,YACNC,EAAW,SACXC,EAAQ,aACRC,EAAY,QACZC,EAAO,YACPC,GACE9B,EAcJ,OACE+B,EAAAA,EAAAA,MAAA,OAAAd,SAAA,EACEc,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBf,SAAA,EAC7BD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,mBACJD,EAAAA,EAAAA,KAAA,UAAQiB,QAAShC,EAAS+B,UAAU,cAAaf,SAAC,UAEpDc,EAAAA,EAAAA,MAAA,KAAAd,SAAA,CAAG,SAAOE,MACVY,EAAAA,EAAAA,MAAA,KAAAd,SAAA,CAAG,YAAUG,MACbW,EAAAA,EAAAA,MAAA,KAAAd,SAAA,CAAG,WAASI,MACZU,EAAAA,EAAAA,MAAA,KAAAd,SAAA,CAAG,eAAaK,MAChBS,EAAAA,EAAAA,MAAA,KAAAd,SAAA,CAAG,WAASQ,MACZM,EAAAA,EAAAA,MAAA,OAAKC,UAAU,UAASf,SAAA,EACtBD,EAAAA,EAAAA,KAAA,UAAQiB,QAxBSC,KACrB,IAAIC,EAAON,EACPD,GAAgBC,GACbA,EAAQO,WAAW,YAAeP,EAAQO,WAAW,cACxDD,EAAO,UAAYN,GAErBpB,OAAO4B,KAAKF,EAAM,WAElBG,QAAQC,IAAI,0BACd,EAeqCP,UAAU,YAAWf,SAAC,eACvDD,EAAAA,EAAAA,KAAA,UAAQiB,QAASA,IAAM/B,EAAQgB,GAAQc,UAAU,YAAWf,SAAC,eAC7DD,EAAAA,EAAAA,KAAA,UAAQiB,QAvDQO,UACpB,IACE,MAAMC,QAAiBC,EAAAA,EAAMC,KAAK9C,EAAc,CAC9C+C,OAJS,EAKTC,MAAO7C,EAAIkB,MAAM4B,aAEnBR,QAAQC,IAAIvC,EAAIkB,MAAM4B,YACtBR,QAAQC,IAAI,0BAA2BE,EAASM,KAClD,CAAE,MAAOC,GACPV,QAAQU,MAAM,oBAAqBA,EACrC,GA6CoChB,UAAU,WAAUf,SAAC,aAEvDc,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBf,SAAA,EAC7BD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,iBACJc,EAAAA,EAAAA,MAAA,KAAAd,SAAA,CAAG,gBAAcM,MACjBQ,EAAAA,EAAAA,MAAA,KAAAd,SAAA,CAAG,qBAAmBO,MACtBR,EAAAA,EAAAA,KAAA,KAAAC,SAAIS,SAIZ,C","sources":["JobPost/JobPostScreenSub.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport API_URLS from \"../config\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst ENV = process.env.REACT_APP_ENV || \"production\";\nconst API_URL_SAVE = API_URLS[ENV] + \"/addJobPost/saveJob\";\n\nfunction JobPostScreenSub({ job, onClose, onShare }) {\n  const navigate = useNavigate();\n\n  \n  useEffect(() => {\n    const handleBackNavigation = (event) => {\n      event.preventDefault();\n      navigate(-1); \n    };\n\n    window.history.pushState(null, null, window.location.pathname); \n    window.addEventListener(\"popstate\", handleBackNavigation);\n\n    return () => {\n      window.removeEventListener(\"popstate\", handleBackNavigation);\n    };\n  }, [navigate]);\n\n  if (!job) {\n    return <div>Select a job to view details.</div>;\n  }\n\n  const userId = 1;\n  const handleSaveJob = async () => {\n    try {\n      const response = await axios.post(API_URL_SAVE, {\n        userId,\n        jobId: job.jobID.toString(),\n      });\n      console.log(job.jobID.toString());\n      console.log(\"Job saved successfully:\", response.data);\n    } catch (error) {\n      console.error(\"Error saving job:\", error);\n    }\n  };\n\n  const {\n    jobID,\n    role,\n    companyName,\n    salary,\n    experience,\n    workMode,\n    employmentType,\n    skills,\n    description,\n    expireon,\n    externalLink,\n    jobLink,\n    Posted_Date,\n  } = job;\n\n  const handleApplyJob = () => {\n    let link = jobLink;\n    if (externalLink && jobLink) {\n      if (!jobLink.startsWith(\"http://\") && !jobLink.startsWith(\"https://\")) {\n        link = \"http://\" + jobLink;\n      }\n      window.open(link, \"_blank\");\n    } else {\n      console.log(\"Applying for the job...\");\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"header-section\">\n        <h2>Role criteria</h2>\n        <button onClick={onClose} className=\"crossbutton\">x</button>\n      </div>\n      <p>Role: {role}</p>\n      <p>Company: {companyName}</p>\n      <p>Salary: {salary}</p>\n      <p>Experience: {experience}</p>\n      <p>Skills: {skills}</p>\n      <div className=\"btn-ssa\">\n        <button onClick={handleApplyJob} className=\"btn-apply\">Apply Job</button>\n        <button onClick={() => onShare(jobID)} className=\"btn-share\">Share Job</button>\n        <button onClick={handleSaveJob} className=\"btn-save\">Save</button>\n      </div>\n      <div className=\"Jobdescription\">\n        <h3>Description</h3>\n        <p> Work Mode : {workMode}</p>\n        <p> Employment Type: {employmentType}</p>\n        <p>{description}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default JobPostScreenSub;\n"],"names":["ENV","process","REACT_APP_ENV","API_URL_SAVE","API_URLS","_ref","job","onClose","onShare","navigate","useNavigate","useEffect","handleBackNavigation","event","preventDefault","window","history","pushState","location","pathname","addEventListener","removeEventListener","_jsx","children","jobID","role","companyName","salary","experience","workMode","employmentType","skills","description","expireon","externalLink","jobLink","Posted_Date","_jsxs","className","onClick","handleApplyJob","link","startsWith","open","console","log","async","response","axios","post","userId","jobId","toString","data","error"],"sourceRoot":""}