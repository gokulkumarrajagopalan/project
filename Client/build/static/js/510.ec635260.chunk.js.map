{"version":3,"file":"static/js/510.ec635260.chunk.js","mappings":"0JA6DA,QAzDA,WAyBI,OACEA,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKC,SAAA,EACjBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,WACPF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,8HAIJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,wJAONC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,0BACFC,EAAAA,EAAAA,KAACC,EAAAA,EAAW,CACVC,qBAAuBC,GAAaC,QAAQC,IAAI,IAADC,OAAKH,IACpDI,cA1CyB,CAC7B,kEACG,4CAyCCC,iBAtC2B,CAC/B,kEACA,+CAsCER,EAAAA,EAAAA,KAACC,EAAAA,EAAW,CACVC,qBAAuBC,GAAaC,QAAQC,IAAI,GAADC,OAAIH,EAAQ,MAC3DI,cArCwB,CAC5B,sCACA,gCAoCIC,iBAjC2B,CAC/B,0BACA,+CACA,uDACA,0CACA,QACA,SA+BJ,C,8FCsBF,QAxEA,SAAoBC,GAA6D,IAA5D,qBAAEP,EAAoB,cAAEK,EAAa,iBAAEC,GAAkBC,EAC5E,MAAON,EAAUO,IAAeC,EAAAA,EAAAA,UAAS,MAClCC,EAAYC,IAAiBF,EAAAA,EAAAA,UAAS,IAEvCG,EAAkBA,KACtB,MAAMC,GACU,MAAbZ,EAAmBI,EAAgBC,GAAkBQ,KAAK,MAC7DC,UAAUC,UACPC,UAAUJ,GACVK,MAAK,KACJP,EAAc,aACdQ,YAAW,KACTR,EAAc,GAAG,GAChB,IAAK,IAETS,OAAM,IAAMT,EAAc,gBAAe,EA2B9C,OAxBAU,EAAAA,EAAAA,YAAU,KACRC,IAAAA,cAAoB,GACnB,CAACjB,EAAeC,KAuBjBX,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACxBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,UACEF,UAAS,QAAAQ,OAAuB,MAAbH,EAAmB,SAAW,IACjDsB,QAASA,KACPf,EAAY,KACZR,EAAqB,IAAI,EACzBH,SACH,OAGDC,EAAAA,EAAAA,KAAA,UACEF,UAAS,WAAAQ,OAA0B,SAAbH,EAAsB,SAAW,IACvDsB,QAASA,KACPf,EAAY,QACZR,EAAqB,OAAO,EAC5BH,SACH,aAIHC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,yBAAwBC,UA1CrB2B,EA2CW,MAAbvB,EAAmBI,EAAgBC,GAzCnDX,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,wBAAuBC,UACpCC,EAAAA,EAAAA,KAAA,UACEF,UAAS,eAAAQ,OAAiBM,GAAc,UACxCa,QAASX,EAAgBf,SAExBa,GAAc,iBAGnBZ,EAAAA,EAAAA,KAAA,OAAKF,UAAS,aAAeC,UAC3BC,EAAAA,EAAAA,KAAA,QAAMF,UAAS,aAAeC,SAC3B2B,EAAqBV,KAAK,mBAbfU,KAgDxB,C","sources":["Learning/DSA/ArrayPage.js","Learning/buttonGroup.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ButtonGroup from \"../buttonGroup\"; \nimport \"./ArrayPage.css\";\n\nfunction ArrayPage() {\n     const cLangElementsSection1 = [\n      \"// Declare and initialize an array with values in a single line\",\n         \"    int numbers[] = {'{1, 2, 3, 4, 5}'};\",\n    ];\n  \n    const javaLangElementsSection1 = [\n      \"// Declare and initialize an array with values in a single line\",\n      \"    int[] numbers = {'{1, 2, 3, 4, 5}'};\",\n    ];\n  \n    const cLangElementsSection2 = [\n      \"printf(\\\"Hello from Section 2!\\\\n\\\");\",\n      \"// More C code for Section 2\",\n    ];\n  \n    const javaLangElementsSection2 = [\n      \"public class Section2 {\",\n      \"    public static void main(String[] args) {\",\n      \"        System.out.println(\\\"Hello from Section 2!\\\");\",\n      \"        // More Java code for Section 2\",\n      \"    }\",\n      \"}\",\n    ];\n  \n    return (\n      <div className=\"App\">\n         <h2>Array</h2>\n      <ul>\n        <li>\n          An array is a linear data structure used to store a collection of\n          elements of the same data type in a sequential manner.\n        </li>\n        <li>\n          Elements in an array are accessed using an index that starts from zero\n          for the first element and increments by one for each subsequent\n          element.\n        </li>\n      </ul>\n\n      <h4>Declaration of array</h4>\n        <ButtonGroup\n          handleLanguageChange={(language) => console.log(` ${language}`)}\n          cLangElements={cLangElementsSection1}\n          javaLangElements={javaLangElementsSection1}\n        />\n        <ButtonGroup\n          handleLanguageChange={(language) => console.log(`${language} `)}\n          cLangElements={cLangElementsSection2}\n          javaLangElements={javaLangElementsSection2}\n        />\n      </div>\n    );\n  }\n  \n\n  \nexport default ArrayPage;\n","\nimport React, { useState, useEffect } from \"react\";\nimport Prism from \"prismjs\";\nimport \"prismjs/themes/prism.css\";\nimport \"prismjs/components/prism-c\"; // Import the 'c' component for C language support\nimport \"./buttongroup.css\";\n\nfunction ButtonGroup({ handleLanguageChange, cLangElements, javaLangElements }) {\n  const [language, setLanguage] = useState(\"c\");\n  const [copyStatus, setCopyStatus] = useState(\"\");\n\n  const copyToClipboard = () => {\n    const codeToCopy =\n      (language === \"c\" ? cLangElements : javaLangElements).join(\"\\n\");\n    navigator.clipboard\n      .writeText(codeToCopy)\n      .then(() => {\n        setCopyStatus(\"Copied..!\");\n        setTimeout(() => {\n          setCopyStatus(\"\");\n        }, 1000);\n      })\n      .catch(() => setCopyStatus(\"Copy Failed\"));\n  };\n\n  useEffect(() => {\n    Prism.highlightAll(); \n  }, [cLangElements, javaLangElements]);\n\n  const renderSyntax = (selectedLangElements) => {\n    return (\n      <div className=\"code-section\">\n        <div className=\"copy-button-container\">\n          <button\n            className={`copy-button ${copyStatus && \"copied\"}`}\n            onClick={copyToClipboard}\n          >\n            {copyStatus || \"Copy Code\"}\n          </button>\n        </div>\n        <pre className={`language-c`}>\n          <code className={`language-c`}>\n            {selectedLangElements.join(\"\\n\")}\n          </code>\n        </pre>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"button-group\">\n        <button\n          className={`btnC ${language === \"c\" ? \"active\" : \"\"}`}\n          onClick={() => {\n            setLanguage(\"c\");\n            handleLanguageChange(\"c\");\n          }}\n        >\n          C\n        </button>\n        <button\n          className={`btnJava ${language === \"java\" ? \"active\" : \"\"}`}\n          onClick={() => {\n            setLanguage(\"java\");\n            handleLanguageChange(\"java\");\n          }}\n        >\n          Java\n        </button>\n      </div>\n      <div className=\"code-section-container\">\n        {renderSyntax(language === \"c\" ? cLangElements : javaLangElements )\n}\n      </div>\n    </div>\n  );\n}\n\nexport default ButtonGroup; \n"],"names":["_jsxs","className","children","_jsx","ButtonGroup","handleLanguageChange","language","console","log","concat","cLangElements","javaLangElements","_ref","setLanguage","useState","copyStatus","setCopyStatus","copyToClipboard","codeToCopy","join","navigator","clipboard","writeText","then","setTimeout","catch","useEffect","Prism","onClick","selectedLangElements"],"sourceRoot":""}