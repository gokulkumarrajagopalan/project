{"version":3,"file":"static/js/388.c20da314.chunk.js","mappings":"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","sources":["JobPost/JobpostDetail.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { MyContext } from \"../context\";\nimport axios from \"axios\";\nimport API_URLS from \"../config\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst ENV = process.env.REACT_APP_ENV || \"production\";\nconst API_URL = API_URLS[ENV] + \"/addJobPost/savejobpost\";\n\nfunction JobPostDetail() {\n  const { userType, isValid } = useContext(MyContext);\n  const [jobRole, setJobRole] = useState(\"\");\n  const [companyName, setCompanyName] = useState(\"\");\n  const [skills, setSkills] = useState(\"\");\n  const [qualification, setQualification] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [salary, setSalary] = useState(\"\");\n  const [workMode, setWorkMode] = useState([]);\n  const [employmentType, setEmploymentType] = useState([]);\n  const [experience, setExperience] = useState(\"\");\n  const [companyImage, setCompanyImage] = useState(null);\n  const [description, setDescription] = useState(\"\");\n  const [expireon, setExpireon] = useState(\"\");\n  const [externalLink, setExternalLink] = useState(false);\n  const [jobLink, setJobLink] = useState(\"\");\n  const navigate = useNavigate();\n\n\n  const handleSalaryChange = (e) => {\n    setSalary(e.target.value);\n  };\n\n\n  const handleWorkModeChange = (mode) => {\n    setWorkMode((prev) =>\n      prev.includes(mode) ? prev.filter((item) => item !== mode) : [...prev, mode]\n    );\n  };\n\n\n  const handleEmploymentTypeChange = (type) => {\n    setEmploymentType((prev) =>\n      prev.includes(type) ? prev.filter((item) => item !== type) : [...prev, type]\n    );\n  };\n\n\n  const handleExperienceChange = (e) => {\n    setExperience(e.target.value);\n  };\n\n  useEffect(() => {\n    const fetchSessionData = async () => {\n      try {\n        if (!isValid) {\n          navigate(\"/SignIn\");\n        } else {\n\n          if (userType !== \"A\" && userType !== \"R\" ) {\n            navigate(\"/JobPostScreen\");\n         \n        }}\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    fetchSessionData();\n  }, [isValid, userType, navigate]);\n  const handleSubmit = async (e) => { \n    e.preventDefault();\n  \n\n    if (!jobRole || !companyName || !location || !description) {\n      alert(\"Please fill out all required fields.\");\n      return;\n    }\n  \n  \n  \n    try {\n  \n      const response = await axios.post(API_URL, { role: jobRole, companyName: companyName,\n         skills: skills, qualification: qualification, location: location, salary: salary,\n        workMode: workMode, \n        employmentType: employmentType, \n        experience: experience,\n        companyImage: companyImage,\n        description: description,\n        expireon: expireon,\n        externalLink: externalLink,\n        jobLink: externalLink ? jobLink : \"\" });\n  \n      if (response.status === 201) {\n        alert(\"Data Saved Successfully\");\n      } else {\n        throw new Error(\"Failed to save data\");\n      }\n    } catch (error) {\n      console.error(\"Error saving data:\", error);\n      alert(\"Failed to save data\");\n    }\n  };\n  \n  \n  return (\n    <div className=\"job-post-detail-container\">\n      <div className=\"job-post-detail\">\n        <form onSubmit={handleSubmit}>\n          <table>\n            <thead>\n              <tr>\n                <th>Job Details</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr className=\"td_hover\">\n                <td>Role</td>\n                <td>\n                  <input\n                    type=\"text\"\n                    className=\"job-input\"\n                    name=\"role\"\n                    value={jobRole}\n                    onChange={(e) => setJobRole(e.target.value)}\n                  />\n                </td>\n              </tr>\n              <tr className=\"td_hover\">\n                <td>Company Name</td>\n                <td>\n                  <input\n                    type=\"text\"\n                    className=\"job-input\"\n                    name=\"companyName\"\n                    value={companyName}\n                    onChange={(e) => setCompanyName(e.target.value)}\n                  />\n                </td>\n              </tr>\n              <tr className=\"td_hover\">\n                <td>Skills</td>\n                <td>\n                  <input\n                    type=\"text\"\n                    className=\"job-input\"\n                    name=\"skills\"\n                    value={skills}\n                    onChange={(e) => setSkills(e.target.value)}\n                  />\n                </td>\n              </tr>\n              <tr className=\"td_hover\">\n                <td>Qualification</td>\n                <td>\n                  <input\n                    type=\"text\"\n                    className=\"job-input\"\n                    name=\"qualification\"\n                    value={qualification}\n                    onChange={(e) => setQualification(e.target.value)}\n                  />\n                </td>\n              </tr>\n              <tr className=\"td_hover\">\n                <td>Location</td>\n                <td>\n                  <input\n                    type=\"text\"\n                    className=\"job-input\"\n                    name=\"location\"\n                    value={location}\n                    onChange={(e) => setLocation(e.target.value)}\n                  />\n                </td>\n              </tr>\n              <tr className=\"td_hover\">\n                <td>Salary</td>\n                <td>\n                  <select value={salary} onChange={handleSalaryChange}>\n                    <option value=\"\">Select salary</option>\n                    <option value=\"1-3 Lakhs\">1-3 Lakhs</option>\n                    <option value=\"3-5 Lakhs\">3-5 Lakhs</option>\n                    <option value=\"5-8 Lakhs\">5-8 Lakhs</option>\n                    <option value=\"8-13 Lakhs\">8-13 Lakhs</option>\n                    <option value=\"13-20 Lakhs\">13-20 Lakhs</option>\n                    <option value=\"20-40 Lakhs\">20-40 Lakhs</option>\n                    <option value=\"40-60 Lakhs\">40-60 Lakhs</option>\n                    <option value=\"60+ Lakhs\">60+ Lakhs</option>\n                  </select>\n                </td>\n              </tr>\n              <tr className=\"td_hover\">\n                <td>\n                  <label>Work Mode:</label>\n                </td>\n                <td>\n                  <div>\n                    <input\n                      type=\"checkbox\"\n                      checked={workMode.includes(\"office\")}\n                      onChange={() => handleWorkModeChange(\"office\")}\n                    />\n                    <label>Work from Office</label>\n                  </div>\n                  <div>\n                    <input\n                      type=\"checkbox\"\n                      checked={workMode.includes(\"hybrid\")}\n                      onChange={() => handleWorkModeChange(\"hybrid\")}\n                    />\n                    <label>Hybrid</label>\n                  </div>\n                  <div>\n                    <input\n                      type=\"checkbox\"\n                      checked={workMode.includes(\"remote\")}\n                      onChange={() => handleWorkModeChange(\"remote\")}\n                    />\n                    <label>Remote</label>\n                  </div>\n                </td>\n              </tr>\n              <tr className=\"td_hover\">\n                <td>\n                  <label>Employment Type:</label>\n                </td>\n                <td>\n                  <div>\n                    <input\n                      type=\"checkbox\"\n                      checked={employmentType.includes(\"part-time\")}\n                      onChange={() => handleEmploymentTypeChange(\"part-time\")}\n                    />\n                    <label>Part-time</label>\n                  </div>\n                  <div>\n                    <input\n                      type=\"checkbox\"\n                      checked={employmentType.includes(\"full-time\")}\n                      onChange={() => handleEmploymentTypeChange(\"full-time\")}\n                    />\n                    <label>Full-time</label>\n                  </div>\n                  <div>\n                    <input\n                      type=\"checkbox\"\n                      checked={employmentType.includes(\"contract\")}\n                      onChange={() => handleEmploymentTypeChange(\"contract\")}\n                    />\n                    <label>Contract</label>\n                  </div>\n                </td>\n              </tr>\n              <tr className=\"td_hover\">\n                <td>Experience</td>\n                <td>\n                  <input\n                    type=\"text\"\n                    className=\"job-input\"\n                    value={experience}\n                    onChange={handleExperienceChange}\n                  />\n                </td>\n              </tr>\n              <tr className=\"td_hover\">\n                <td>Company Image</td>\n                <td>\n                  <input\n                    type=\"file\"\n                    accept=\"image/*\"\n                    onChange={(e) => setCompanyImage(e.target.files[0])}\n                  />\n                </td>\n              </tr>\n              <tr className=\"td_hover\">\n                <td>Description</td>\n                <td>\n                  <textarea\n                    rows={5}\n                    value={description}\n                    onChange={(e) => setDescription(e.target.value)}\n                  />\n                </td>\n              </tr>\n              <tr className=\"td_hover\">\n                <td>Expire On</td>\n                <td>\n                  <input\n                    type=\"date\"\n                    value={expireon}\n                    onChange={(e) => setExpireon(e.target.value)}\n                  />\n                </td>\n              </tr>\n              <tr className=\"td_hover\">\n                <td>External Link</td>\n                <td>\n                  <input\n                    type=\"checkbox\"\n                    checked={externalLink}\n                    onChange={(e) => setExternalLink(e.target.checked)}\n                  />\n                </td>\n              </tr>\n              {externalLink && (\n                <tr className=\"td_hover\">\n                  <td>Job Link</td>\n                  <td>\n                    <input\n                      type=\"url\"\n                      value={jobLink}\n                      onChange={(e) => setJobLink(e.target.value)}\n                    />\n                  </td>\n                </tr>\n              )}\n              <tr>\n                <td colSpan={2}>\n                  <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default JobPostDetail;\n"],"names":["ENV","process","REACT_APP_ENV","API_URL","API_URLS","userType","isValid","useContext","MyContext","jobRole","setJobRole","useState","companyName","setCompanyName","skills","setSkills","qualification","setQualification","location","setLocation","salary","setSalary","workMode","setWorkMode","employmentType","setEmploymentType","experience","setExperience","companyImage","setCompanyImage","description","setDescription","expireon","setExpireon","externalLink","setExternalLink","jobLink","setJobLink","navigate","useNavigate","handleWorkModeChange","mode","prev","includes","filter","item","handleEmploymentTypeChange","type","useEffect","async","e","console","log","fetchSessionData","_jsx","className","children","onSubmit","preventDefault","axios","post","role","status","Error","alert","error","_jsxs","name","value","onChange","target","checked","accept","files","rows","colSpan"],"sourceRoot":""}