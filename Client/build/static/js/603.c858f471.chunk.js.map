{"version":3,"file":"static/js/603.c858f471.chunk.js","mappings":"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","sources":["Components/Textbox.js","Components/Profile.js"],"sourcesContent":["\nimport React, { useState, useEffect } from 'react';\n\n\nconst Textbox = ({ label, placeholder, style, className }) => {\n  const languages = ['C', 'C++', 'Java', 'Python', 'Kotlin', 'Ruby', 'C#', 'SQL', 'Unix'];\n  const [inputValue, setInputValue] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n  const [selectedOptions, setSelectedOptions] = useState([]);\n\n  useEffect(() => {\n    console.log(selectedOptions.join(', '));\n  }, [selectedOptions]);\n\n  const handleChange = (e) => {\n    const value = e.target.value;\n    setInputValue(value);\n\n    if (value) {\n      const filteredSuggestions = languages.filter((lang) =>\n        lang.toLowerCase().startsWith(value.toLowerCase()) &&\n        !selectedOptions.includes(lang)\n      );\n      setSuggestions(filteredSuggestions);\n    } else {\n      setSuggestions([]);\n    }\n  };\n\n  const handleSuggestionClick = (suggestion) => {\n    setSelectedOptions([...selectedOptions, suggestion]);\n    setInputValue('');\n    setSuggestions([]);\n  };\n\n  const handleRemoveOption = (option) => {\n    setSelectedOptions(selectedOptions.filter(item => item !== option));\n  };\n\n  return (\n    <div className=\"textbox-container\">\n      <label className=\"textbox-label\">{label}</label>\n      <div className=\"textbox-input-container\">\n        {selectedOptions.map((option, index) => (\n          <div key={index} className=\"textbox-selected-option\">\n            {option}\n            <span onClick={() => handleRemoveOption(option)}>&times;</span>\n          </div>\n        ))}\n        <input\n          type=\"text\"\n          value={inputValue}\n          onChange={handleChange}\n          placeholder={placeholder}\n          className={`textbox-input ${className}`}\n          style={style}\n        />\n      </div>\n      {suggestions.length > 0 && (\n        <ul className=\"textbox-suggestions\">\n          {suggestions.map((suggestion, index) => (\n            <li\n              key={index}\n              className=\"textbox-suggestion\"\n              onClick={() => handleSuggestionClick(suggestion)}\n            >\n              {suggestion}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Textbox;\n","import React, { useState, useEffect } from \"react\";\nimport Textbox from \"./Textbox\"; // Assuming Textbox is a custom component\nimport API_URLS from \"../config\";\n\nconst ENV = process.env.REACT_APP_ENV || \"production\";\nconst API_URL_GET_PROFILE = API_URLS[ENV] + \"/addProfile/getProfile/\";\nconst API_URL_CREATE_PROFILE = API_URLS[ENV] + \"/addProfile/createProfile/\";\n\nfunction Profile() {\n  const [profile, setProfile] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    phone: \"\",\n    address: \"\",\n    city: \"\",\n    state: \"\",\n    country: \"\",\n    zipCode: \"\",\n    jobTitle: \"\",\n    company: \"\",\n    experienceYears: \"\",\n    education: \"\",\n    skills: [],\n    resume: null,\n    profilePicture: null,\n  });\n\n  const [isEditing, setIsEditing] = useState(true);\n\n  // Fetch the profile data when the component mounts\n  useEffect(() => {\n    const fetchProfile = async () => {\n      try {\n        const response = await fetch(API_URL_GET_PROFILE);\n        const data = await response.json();\n        if (data.profile) {\n          // Set the profile data if fetched successfully\n          setProfile(data.profile);\n        }\n      } catch (error) {\n        console.error(\"Error fetching profile:\", error);\n      }\n    };\n\n    fetchProfile();\n  }, []);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setProfile({\n      ...profile,\n      [name]: value,\n    });\n  };\n\n  const handleFileChange = (e) => {\n    const { name, files } = e.target;\n    setProfile({\n      ...profile,\n      [name]: files[0], // Assuming single file upload\n    });\n  };\n\n  const handleSkillsChange = (skills) => {\n    setProfile({\n      ...profile,\n      skills,\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setIsEditing(false);\n    await saveProfile(profile); // Save the profile\n  };\n\n  const handleEditClick = () => {\n    setIsEditing(true); // Enable editing mode\n  };\n\n  const saveProfile = async (profileData) => {\n    try {\n      const formData = new FormData();\n      Object.keys(profileData).forEach((key) => {\n        if (profileData[key] !== null) {\n          formData.append(key, profileData[key]);\n        }\n      });\n\n      const response = await fetch(API_URL_CREATE_PROFILE, {\n        method: \"POST\",\n        body: formData,\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Failed to save profile\");\n      }\n\n      const result = await response.json();\n      console.log(\"Profile saved successfully:\", result);\n    } catch (error) {\n      console.error(\"Error saving profile:\", error);\n    }\n  };\n\n  const renderButton = (field) => {\n    return (\n      <button\n        type=\"button\"\n        onClick={handleEditClick}\n        className=\"profile-button edit-button\"\n      >\n        {profile[field] ? \"Edit\" : \"Add\"}\n      </button>\n    );\n  };\n\n  return (\n    <div className=\"profile-container\">\n      <div className=\"profile-picture-container\">\n        {profile.profilePicture ? (\n          <img\n            src={URL.createObjectURL(profile.profilePicture)}\n            alt=\"Profile\"\n            className=\"profile-picture\"\n          />\n        ) : (\n          <div className=\"empty-profile-picture\" />\n        )}\n      </div>\n      {!isEditing ? (\n        <button\n          onClick={handleEditClick}\n          className=\"profile-button edit-button\"\n        >\n          Edit Profile\n        </button>\n      ) : (\n        <form onSubmit={handleSubmit}>\n          <h2>Your Profile</h2>\n\n          <div className=\"profile-section\">\n            <h3>Personal Information</h3>\n            {renderButton(\"firstName\")}\n            <input\n              type=\"text\"\n              name=\"firstName\"\n              placeholder=\"First Name\"\n              value={profile.firstName || \"\"}\n              onChange={handleChange}\n              className=\"profile-input\"\n            />\n            <input\n              type=\"text\"\n              name=\"lastName\"\n              placeholder=\"Last Name\"\n              value={profile.lastName || \"\"}\n              onChange={handleChange}\n              className=\"profile-input\"\n            />\n            <input\n              type=\"tel\"\n              name=\"phone\"\n              placeholder=\"Phone\"\n              value={profile.phone || \"\"}\n              onChange={handleChange}\n              className=\"profile-input\"\n            />\n          </div>\n\n          <div className=\"profile-section\">\n            <h3>Professional Information</h3>\n            {renderButton(\"jobTitle\")}\n            <input\n              type=\"text\"\n              name=\"jobTitle\"\n              placeholder=\"Job Title\"\n              value={profile.jobTitle || \"\"}\n              onChange={handleChange}\n              className=\"profile-input\"\n            />\n            <input\n              type=\"text\"\n              name=\"company\"\n              placeholder=\"Company\"\n              value={profile.company || \"\"}\n              onChange={handleChange}\n              className=\"profile-input\"\n            />\n            <input\n              type=\"number\"\n              name=\"experienceYears\"\n              placeholder=\"Years of Experience\"\n              value={profile.experienceYears || \"\"}\n              onChange={handleChange}\n              className=\"profile-input\"\n            />\n          </div>\n\n          <div className=\"profile-section\">\n            <h3>Education</h3>\n            {renderButton(\"education\")}\n            <input\n              type=\"text\"\n              name=\"education\"\n              placeholder=\"Highest Degree\"\n              value={profile.education || \"\"}\n              onChange={handleChange}\n              className=\"profile-input\"\n            />\n          </div>\n\n          <div className=\"profile-section\">\n            <h3>Skills</h3>\n            {renderButton(\"skills\")}\n            <Textbox\n              label=\"Add Your Skills\"\n              placeholder=\"Type and select skills\"\n              value={profile.skills || []}\n              onChange={handleSkillsChange}\n            />\n          </div>\n\n          <div className=\"profile-section\">\n            <h3>Upload Documents</h3>\n            <input\n              type=\"file\"\n              name=\"resume\"\n              onChange={handleFileChange}\n              accept=\".pdf,.doc,.docx\"\n              className=\"profile-input-file\"\n            />\n            <input\n              type=\"file\"\n              name=\"profilePicture\"\n              onChange={handleFileChange}\n              accept=\".jpg,.jpeg,.png\"\n              className=\"profile-input-file\"\n            />\n          </div>\n\n          <button type=\"submit\" className=\"profile-button save-button\">\n            Save Profile\n          </button>\n        </form>\n      )}\n    </div>\n  );\n}\n\nexport default Profile;\n"],"names":["_ref","label","placeholder","style","className","languages","inputValue","setInputValue","useState","suggestions","setSuggestions","selectedOptions","setSelectedOptions","useEffect","console","log","join","_jsxs","children","_jsx","map","option","index","onClick","filter","item","handleRemoveOption","type","value","onChange","e","target","filteredSuggestions","lang","toLowerCase","startsWith","includes","concat","length","suggestion","handleSuggestionClick","ENV","process","REACT_APP_ENV","API_URL_GET_PROFILE","API_URLS","API_URL_CREATE_PROFILE","profile","setProfile","firstName","lastName","phone","address","city","state","country","zipCode","jobTitle","company","experienceYears","education","skills","resume","profilePicture","isEditing","setIsEditing","async","response","fetch","data","json","error","fetchProfile","handleChange","name","handleFileChange","files","handleEditClick","saveProfile","formData","FormData","Object","keys","profileData","forEach","key","append","method","body","ok","Error","result","renderButton","field","src","URL","createObjectURL","alt","onSubmit","preventDefault","Textbox","accept"],"sourceRoot":""}