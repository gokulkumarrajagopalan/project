{"version":3,"file":"static/js/738.b4cee689.chunk.js","mappings":"qKAGA,MAAMA,EAAMC,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,eAAiB,aACnCC,EAAUC,EAAAA,EAASJ,GAAO,aAuFhC,QArFA,WACI,MAAOK,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,OAC1BC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,OAC5BK,EAAgBC,IAAqBN,EAAAA,EAAAA,UAAS,aAM/CO,EAA8BC,IAChCF,EAAkBE,EAAMC,OAAOC,MAAM,EAsCzC,OACIC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,wBACJD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACID,EAAAA,EAAAA,MAAA,SAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,SACIC,KAAK,QACLJ,MAAM,YACNK,QAA4B,cAAnBV,EACTW,SAAUT,IACZ,kBAGNI,EAAAA,EAAAA,MAAA,SAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,SACIC,KAAK,QACLJ,MAAM,YACNK,QAA4B,cAAnBV,EACTW,SAAUT,IACZ,qBAIVM,EAAAA,EAAAA,KAAA,SACIC,KAAK,OACLG,OAA2B,cAAnBZ,EAAiC,QAAU,OACnDW,SArEcR,IACtBT,EAAQS,EAAMC,OAAOS,MAAM,GAAG,KAsE1BL,EAAAA,EAAAA,KAAA,UAAQM,QA/DKC,UACjB,IAAKtB,EAED,YADAuB,MAAM,mCAIV,MAAMC,EAAW,IAAIC,SACrBD,EAASE,OAAO,OAAQ1B,GAExBI,GAAW,GACXE,EAAS,MAET,IACI,MACMqB,EAAmC,cAAnBpB,EAAiC,MAAQ,OAEzDqB,QAAiBC,EAAAA,EAAMC,KAAKhC,EAAS0B,EAAU,CACjDO,aAAc,SAGZC,EAAMC,OAAOC,IAAIC,gBAAgB,IAAIC,KAAK,CAACR,EAASS,QACpDC,EAAOC,SAASC,cAAc,KACpCF,EAAKG,KAAOT,EACZM,EAAKI,aAAa,WAAW,sBAADC,OAAwBhB,IACpDY,SAASK,KAAKC,YAAYP,GAC1BA,EAAKQ,QACLR,EAAKS,QACT,CAAE,MAAOC,GACL1C,EAAS,2CACT2C,QAAQ5C,MAAM,wBAAyB2C,EAC3C,CAAC,QACG5C,GAAW,EACf,GA+BmC8C,SAAU/C,EAAQW,SAC5CX,EAAU,gBAAkB,uBAEhCE,IAASU,EAAAA,EAAAA,KAAA,KAAGoC,MAAO,CAAEC,MAAO,OAAQtC,SAAET,MAGnD,C","sources":["Converter/Wordtopdf.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport API_URLS from \"../config\";\nconst ENV = process.env.REACT_APP_ENV || \"production\";\nconst API_URL = API_URLS[ENV] + \"/wordToPdf\";\n\nfunction DocumentConverter() {\n    const [file, setFile] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [conversionType, setConversionType] = useState('wordToPdf');\n\n    const handleFileChange = (event) => {\n        setFile(event.target.files[0]);\n    };\n\n    const handleConversionTypeChange = (event) => {\n        setConversionType(event.target.value);\n    };\n\n    const handleUpload = async () => {\n        if (!file) {\n            alert('Please select a file to upload.');\n            return;\n        }\n\n        const formData = new FormData();\n        formData.append('file', file);\n\n        setLoading(true);\n        setError(null);\n\n        try {\n            const endpoint = conversionType === 'wordToPdf' ? '/wordtopdf' : '/pdftoword';\n            const fileExtension = conversionType === 'wordToPdf' ? 'pdf' : 'docx';\n\n            const response = await axios.post(API_URL, formData, {\n                responseType: 'blob',\n            });\n\n            const url = window.URL.createObjectURL(new Blob([response.data]));\n            const link = document.createElement('a');\n            link.href = url;\n            link.setAttribute('download', `converted_document.${fileExtension}`);\n            document.body.appendChild(link);\n            link.click();\n            link.remove();\n        } catch (err) {\n            setError('Error uploading or converting the file.');\n            console.error('Error uploading file:', err);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <div>\n            <h2>Document Converter</h2>\n            <div>\n                <label>\n                    <input\n                        type=\"radio\"\n                        value=\"wordToPdf\"\n                        checked={conversionType === 'wordToPdf'}\n                        onChange={handleConversionTypeChange}\n                    />\n                    Word to PDF\n                </label>\n                <label>\n                    <input\n                        type=\"radio\"\n                        value=\"pdfToWord\"\n                        checked={conversionType === 'pdfToWord'}\n                        onChange={handleConversionTypeChange}\n                    />\n                    PDF to Word\n                </label>\n            </div>\n            <input\n                type=\"file\"\n                accept={conversionType === 'wordToPdf' ? '.docx' : '.pdf'}\n                onChange={handleFileChange}\n            />\n            <button onClick={handleUpload} disabled={loading}>\n                {loading ? 'Converting...' : 'Upload and Convert'}\n            </button>\n            {error && <p style={{ color: 'red' }}>{error}</p>}\n        </div>\n    );\n}\n\nexport default DocumentConverter;\n"],"names":["ENV","process","REACT_APP_ENV","API_URL","API_URLS","file","setFile","useState","loading","setLoading","error","setError","conversionType","setConversionType","handleConversionTypeChange","event","target","value","_jsxs","children","_jsx","type","checked","onChange","accept","files","onClick","async","alert","formData","FormData","append","fileExtension","response","axios","post","responseType","url","window","URL","createObjectURL","Blob","data","link","document","createElement","href","setAttribute","concat","body","appendChild","click","remove","err","console","disabled","style","color"],"sourceRoot":""}