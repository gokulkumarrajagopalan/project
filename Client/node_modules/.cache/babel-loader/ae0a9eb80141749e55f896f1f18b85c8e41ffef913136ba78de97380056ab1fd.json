{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\project\\\\Client\\\\src\\\\context.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport API_URLS from \"./config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyContext = /*#__PURE__*/createContext({});\nconst ENV = process.env.REACT_APP_ENV || \"production\";\nconst API_URL_SESSION = API_URLS[ENV] + \"/signIn/sessioncheck\";\nconst StateContext = ({\n  children\n}) => {\n  _s();\n  const [userType, setUserType] = useState('');\n  const [isValid, setIsValid] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    axios.defaults.withCredentials = true;\n    const fetchSessionData = async () => {\n      try {\n        const res = await axios.get(API_URL_SESSION);\n        const valid = res.data.valid;\n        const userType = res.data.TypeOfUser;\n        setUserType(userType);\n        setIsValid(valid);\n        setIsLoading(false);\n        console.log(\"isValid\", valid);\n        console.log(\"userType\", userType);\n      } catch (error) {\n        console.log(error);\n        setIsLoading(false);\n      }\n    };\n    fetchSessionData();\n  }, [isValid]);\n  if (isLoading) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(MyContext.Provider, {\n    value: {\n      userType,\n      isValid\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(StateContext, \"LYGrHGPnu/1i1tdGH2XRbSl8cDc=\");\n_c = StateContext;\nexport { StateContext, MyContext };\nvar _c;\n$RefreshReg$(_c, \"StateContext\");","map":{"version":3,"names":["React","createContext","useEffect","useState","axios","API_URLS","jsxDEV","_jsxDEV","MyContext","ENV","process","env","REACT_APP_ENV","API_URL_SESSION","StateContext","children","_s","userType","setUserType","isValid","setIsValid","isLoading","setIsLoading","defaults","withCredentials","fetchSessionData","res","get","valid","data","TypeOfUser","console","log","error","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/project/Client/src/context.js"],"sourcesContent":["import React, { createContext, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport API_URLS from \"./config\";\r\n\r\nconst MyContext = createContext({});\r\nconst ENV = process.env.REACT_APP_ENV || \"production\";\r\nconst API_URL_SESSION = API_URLS[ENV] + \"/signIn/sessioncheck\"\r\n\r\n\r\nconst StateContext = ({ children }) => {\r\n  const [userType, setUserType] = useState('');\r\n  const [isValid, setIsValid] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true); \r\n\r\n\r\n  useEffect(() => {\r\n    axios.defaults.withCredentials = true;\r\n\r\n    const fetchSessionData = async () => {\r\n      try {\r\n        const res = await axios.get(API_URL_SESSION);\r\n        const valid = res.data.valid;\r\n        const userType = res.data.TypeOfUser;\r\n    \r\n        setUserType(userType);\r\n        setIsValid(valid);\r\n        setIsLoading(false); \r\n        console.log(\"isValid\", valid); \r\n        console.log(\"userType\", userType); \r\n\r\n      } catch (error) {\r\n        console.log(error);\r\n        setIsLoading(false); \r\n      }\r\n    };\r\n\r\n    fetchSessionData();\r\n  }, [isValid]); \r\n\r\n  if (isLoading) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <MyContext.Provider value={{ userType, isValid }}>\r\n      {children}\r\n    </MyContext.Provider>\r\n  );\r\n};\r\n\r\nexport { StateContext, MyContext };\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACjE,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,SAAS,gBAAGP,aAAa,CAAC,CAAC,CAAC,CAAC;AACnC,MAAMQ,GAAG,GAAGC,OAAO,CAACC,GAAG,CAACC,aAAa,IAAI,YAAY;AACrD,MAAMC,eAAe,GAAGR,QAAQ,CAACI,GAAG,CAAC,GAAG,sBAAsB;AAG9D,MAAMK,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAGhDD,SAAS,CAAC,MAAM;IACdE,KAAK,CAACmB,QAAQ,CAACC,eAAe,GAAG,IAAI;IAErC,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMtB,KAAK,CAACuB,GAAG,CAACd,eAAe,CAAC;QAC5C,MAAMe,KAAK,GAAGF,GAAG,CAACG,IAAI,CAACD,KAAK;QAC5B,MAAMX,QAAQ,GAAGS,GAAG,CAACG,IAAI,CAACC,UAAU;QAEpCZ,WAAW,CAACD,QAAQ,CAAC;QACrBG,UAAU,CAACQ,KAAK,CAAC;QACjBN,YAAY,CAAC,KAAK,CAAC;QACnBS,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEJ,KAAK,CAAC;QAC7BG,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEf,QAAQ,CAAC;MAEnC,CAAC,CAAC,OAAOgB,KAAK,EAAE;QACdF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;QAClBX,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC;IAEDG,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,CAACN,OAAO,CAAC,CAAC;EAEb,IAAIE,SAAS,EAAE;IACb,OAAO,IAAI;EACb;EAEA,oBACEd,OAAA,CAACC,SAAS,CAAC0B,QAAQ;IAACC,KAAK,EAAE;MAAElB,QAAQ;MAAEE;IAAQ,CAAE;IAAAJ,QAAA,EAC9CA;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAEzB,CAAC;AAACvB,EAAA,CAvCIF,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AAyClB,SAASA,YAAY,EAAEN,SAAS;AAAG,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}